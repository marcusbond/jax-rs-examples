# Here is the set up for some usernames and passwords along with specific permissions. In a dynamic users application you would 
# get users and their permissions some other way, such as LDAP or from a database.
# User Peter is given the "directory-user" role and user Sarah both "directory-user" and "employee-admin" role
[users]
Peter = P3ter, directory-user
Sarah = S4rah, directory-user, employee-admin

# The roles and permissions; "directory-user"s can only get employee details and "employee-admin"s can do anything (*) with an employee.. oo-er missus!
[roles]
directory-user = employee:get
employee-admin = employee:*


# This section sets up the web application security via Filters; the goal here is to secure the rest API and keep it STATELESS.
# The below configuration tells Shiro that any request to the application is to pass through the "noSessionCreation" and "authcBasic"
# which are provided out of the box by Shiro:
# HTTP (the "authcBasic" filter) Basic Authentication filters resources that must be authenticated by HTTP Basic Authentication and sends back
# the authenticate challenge along with handling the authentication.
# The "noSessionCreation" filter ensures no sessions are created for a request / authentication.

[urls]
/** = noSessionCreation, authcBasic
